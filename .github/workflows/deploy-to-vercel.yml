name: CI / Deploy to Vercel

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Install & test backend (if you have tests)
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Test backend
        working-directory: ./backend
        run: npm test || echo "No backend tests defined"

      # Install & test frontend
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Test frontend
        working-directory: ./frontend
        run: npm test || echo "No frontend tests defined"

      # Build frontend
      - name: Build frontend for production
        working-directory: ./frontend
        run: npm run build

  deploy:
    name: Deploy to Vercel
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel environment
        run: |
          vercel pull --yes \
            --environment=$([[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]] && echo "production" || echo "preview") \
            --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Build via Vercel
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel (prebuilt)
        run: |
          vercel deploy --prebuilt \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --prod   # optional: only use `--prod` if deploying production
